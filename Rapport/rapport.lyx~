#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{hyperref}   % pour les liens cliquables de la table des matières
 
\makeatletter
\@addtoreset{section}{part}   % reprendre à partir de 1 les sections des parties suivantes.
\makeatother
 
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Technologie Web 2
\end_layout

\begin_layout Author
Rapport de Projet
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Part
Introduction
\end_layout

\begin_layout Standard
L’objectif de ce projet est de réaliser un site de vente en ligne, sur le
 même modèle principe que des sites comme www.amazon.com ou leboncoin.fr.
 
\end_layout

\begin_layout Section
Fonctionnalités principales
\end_layout

\begin_layout Standard
On retrouvera sur le site les fonctionnalités présentés ci-après : 
\end_layout

\begin_layout Subsection
La création et la gestion de comptes
\end_layout

\begin_layout Standard
Elle permettra la création/édition d'un compte via les informations données
 par l'utilisateur (identité, email, pseudo et mot de passe).
 Il existera aussi un compte administrateur qui pourra modifier le contenu
 du site en ligne.
\end_layout

\begin_layout Subsection
Recherche d'un produit
\end_layout

\begin_layout Standard
La recherche d'un produit peut se faire de deux manières :
\end_layout

\begin_layout Enumerate
via la barre de recherche
\end_layout

\begin_layout Enumerate
via la recherche avancée, qui sera multi-critères (nom/ type d'objet / prix
 / note de l’objet / nombre de ventes réalisées / réputation du vendeur)
\end_layout

\begin_layout Subsection
Actions disponibles sur le site
\end_layout

\begin_layout Standard
Les autres fonctions du site sont listés ci-après :
\end_layout

\begin_layout Itemize
deux types de connexions : utilisateur simple (acheteur ou vendeur) ou administr
ateur,
\end_layout

\begin_layout Itemize
consulter un produit,
\end_layout

\begin_layout Itemize
acheter un produit,
\end_layout

\begin_layout Itemize
vendre un produit,
\end_layout

\begin_layout Itemize
système de paiement,
\end_layout

\begin_layout Itemize
commenter et noter un produit,
\end_layout

\begin_layout Itemize
accéder au support client
\end_layout

\begin_layout Subsection
Valorisation de comptes
\end_layout

\begin_layout Standard
Le systèle de valorisation de comptes qui sera utilisée sera le suivant
 :
\end_layout

\begin_layout Itemize
un compte Premium ayant des avantages supplémentaires lors de l'achat de
 produits par rapport à l'utilisateur simple.
\end_layout

\begin_layout Itemize
un compte Super Premium ayant encore plus d'avantages.
\end_layout

\begin_layout Section
Liste des acteurs 
\end_layout

\begin_layout Standard
Cette liste reprend et résume les éléments concernant les types d'utilisateur
 énoncés dans la partie 1 Fonctionnalités principales
\end_layout

\begin_layout Enumerate
Utilisateur simple : cet utilisateur peut être soit acheteur ou vendeur
 sur le site; il n'a aucun droit de modification sur le site.
\end_layout

\begin_layout Enumerate
Administrateur : cet utilisateur a tous les droits sur le site, il peut
 en modifier le contenu à volonté.
 
\end_layout

\begin_layout Section
Contraintes matérielles et logicielles 
\end_layout

\begin_layout Enumerate
Le site doit être accessible depuis les navigateurs suivants : Google Chrome,
 Mozilla Firefox.
\end_layout

\begin_layout Enumerate
Résolutions d'écran supportées : le site web doit pouvoir s'adapter à tous
 types d'afficheurs.
\end_layout

\begin_layout Part
Spécifications
\end_layout

\begin_layout Standard
Dans cette partie, nous présenterons les différents diagrammes qui découlent
 de l'analyse fonctionelle du problème.
\end_layout

\begin_layout Section
Diagrammes de cas d'utilisation
\end_layout

\begin_layout Standard
Nous présentons ici une liste non-exhaustive des diagrammes d'utilisation
 issue de la compréhension du besoin métier.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/use_case_create_account.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
cas d'utilisation : création/gestion de compte
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/use_case_search_products.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
cas d'utilisation : rechercher un produit
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/use_case_identification.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
cas d'utilisation : connexion
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/use_case_consult_a_product.jpeg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
cas d'utilisation : consulter un produit
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/use_case_add_delete_product.jpeg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
cas d'utilisation : ajouter/supprimer un produit
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/use_case_diagram_comment.jpeg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
cas d'utilisation : commenter un produit
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/use_case_diagram_management_cart.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
cas d'utilisation : gestion du panier d'achat
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/use_case_diagram_payment.jpeg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
cas d'utilisation : paiement
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/use_case_Grade.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
cas d'utilisation : noter un produit
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Diagramme de navigation
\end_layout

\begin_layout Standard
Le diagramme de navigation nous permettra de modéliser le parcours d'un
 utilisateur sur le site.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/diagramme_nav.png
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagramme de navigation
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Part
Conception préliminaire
\end_layout

\begin_layout Section
Diagrammes de sequence système
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/sequence_diagram_system_account.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DSS - gestion de compte
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/sequence_diagram_system_account_creation.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DSS - création de compte
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/sequence_diagram_system_consult_a_product.jpeg
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DSS - consultation d'un produit
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/sequence_diagram_system_delete_a_product.jpeg
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DSS - Suppression d'un produit
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
Diagramme de séquence
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/diagram_sequence_cart_management.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagramme de séquence - gestion du panier
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Diagramme de classe
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/diagramme_classe.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagramme de classe
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Part
Conception détaillée
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/rasendrasoa/OpenWallet/Conception/diagramme_classe.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Digramme de classes participantes
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Part
Implémentation et tests
\end_layout

\begin_layout Standard
Dans cette partie, nous allons dans un premier temps détailler les étapes
 de la programmation ainsi que les choix techniques, puis les tests effectués,
 un aperçu du résultat obtenu et enfin les principales difficultés rencontrées.
\end_layout

\begin_layout Section
Les différentes étapes du développement
\end_layout

\begin_layout Subsection
Construction des pages avant-plan (front-end)
\end_layout

\begin_layout Standard
Nous avons dans un premier dans mis en place la structure principale du
 site avec les diagrammes de conception.
 Pour réaliser les fonctionnalités dans notre diagramme de navigation, on
 avons déterminé qu’il y a au total 13 pages type à réaliser: 
\end_layout

\begin_layout Itemize
La page pour gérer le compte utilisateur
\end_layout

\begin_layout Itemize
La page pour ajouter en spécifier un produit à vendre
\end_layout

\begin_layout Itemize
La page pour faire une recherche avancée dans notre liste des produits
\end_layout

\begin_layout Itemize
La page pour gérer le panier et passer au paiement
\end_layout

\begin_layout Itemize
La Homepage
\end_layout

\begin_layout Itemize
La page pour inscription
\end_layout

\begin_layout Itemize
La page pour s’indentifier
\end_layout

\begin_layout Itemize
La page pour accéder au information détaillé du commande
\end_layout

\begin_layout Itemize
La page du produit à vendre
\end_layout

\begin_layout Itemize
La page pour afficher les résultats de recherche
\end_layout

\begin_layout Itemize
La page pour devenir compte premium
\end_layout

\begin_layout Itemize
La page pour ajouter une adresse de livraison
\end_layout

\begin_layout Itemize
La page pour service clientèle
\end_layout

\begin_layout Standard
Cette première partie est principalement axée sur le côté HTML/CSS quasiment
 sans aucun développement back-end.
 Nous avons développé ces pages pour un style de design unifié et pour vérifier
 notre conception.
\end_layout

\begin_layout Subsubsection
Choix techniques et bibliothèques
\end_layout

\begin_layout Itemize

\series bold
HTML/CSS
\series default
: Le HTML (« HyperText Mark-Up Language ») est un langage dit de « balisage
 » ou de « structuration » permettant la conception de pages web avec des
 balises de formatage.
 Les balises permettent d'indiquer la façon dont doivent être présentés
 le document et les liens qu'il établit avec d'autres documents.
 Le CSS (« Cascading Style Sheets » : feuilles de style en cascade) est
 un langage informatique complétant le HTML.
 Alors que le HTML structure la page Web, le CSS va la mettre en forme en
 y apportant du style.
 
\end_layout

\begin_layout Itemize

\series bold
Modèle de design Mem[é]nto by Your Inspiration Themes
\series default
: On a utilisé un modèle de design web Memento.
 Memento est un thème brandable et créatif avec une mise en page propre,
 entreprise et réactive., Il permet de définir n'importe quelle couleur à
 des éléments tels que des arrière-plans, des liens, du texte, des liens
 de menu, etc.
 et changer complètement l'apparence de site en quelques secondes.
 
\end_layout

\begin_layout Subsection
Conception de base de données
\end_layout

\begin_layout Standard
La réalisation de notre site web a requis la création d’une base de données.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé1.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Base de données MySQL
\end_layout

\end_inset


\end_layout

\end_inset

Dans notre cas, il nous a tout d’abord fallu créer ces 8 tables pour la
 gestion de site web.
 La table user est destinér à gérer toutes les information utilisateur autre
 que le pseudonyme et le mot de passe.
 Ensuite on construit les autres 3 tables de base: orders, category et address.
 Puis, lorsque nous avons commencé category et user, ça nous permet d’initialise
r le table produit avec 2 clés étranger id_user et id_category.
 Après on construit la table orders pour rajouter la possibilité d’insérer
 plusieurs produits.
 La table comment est reliée au orders et user.
 Enfin, pour obtenir un état intermédiaire entre produit, user et orders,
 il nous a donc fallu rajouter deux tables: item_cart et item_order concernant
 les tableaux récapitulatif des items perçus par l’association avec les
 paniers et les commandes.
 
\end_layout

\begin_layout Subsubsection
Choix techniques et bibliothèques
\end_layout

\begin_layout Itemize
SQL: est un langage informatique normalisé servant à exploiter des bases
 de données relationnelles.
 La partie langage de manipulation des données de SQL permet de rechercher,
 d'ajouter, de modifier ou de supprimer des données dans les bases de données
 relationnelles.
 
\end_layout

\begin_layout Subsection
Développement Arrière-plan(DAO)
\end_layout

\begin_layout Standard
Après avoir implémenté les classes Javabeans avec ses propres méthodes et
 fini le script SQL pour la construction BD, Il a fallu trouver une solution
 pour la communication.
 Si on emploie que les méthodes JDBC, on a actuellement une représentation
 globale comme suit :
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé2.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Communication uniquement avec JDBC
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En théorie, MVC est ainsi bien respecté.
 Mais avec ce modèle on risque de mélanger le code responsable des traitements
 métier au code responsable du stockage des données en pratique.
 Il rend aussi les tests difficile à réaliser (il est impossible de changer
 de mode de stockage.
 Que ce soit vers un autre SGBD, voir vers un système complètement différent
 d'une base de données, cela impliquerait une réécriture complète de tout
 le modèle, car le code métier est mêlé avec et dépendant du code assurant
 le stockage).
 Au lieu de faire communiquer directement nos objets métier avec la base
 de données, on utilise une autre solution pour améliorer la performance
 et la robustesse de notre système.
 C'est le couche DAO qui va ensuite de son côté communiquer avec le système
 de stockage.
 On obitent une nouvelle représentation globale comme suit:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé3.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Communication avec DAO
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pour l'implémentation du modèle(MVC), nous avonc procédé en deux étapes
 :
\end_layout

\begin_layout Enumerate

\series bold
Création des classes métier (javabeans)
\series default
 : En correspondance à notre conception et construction BD, on crée 8 classes
 java: Address, Category, Comment, ItemCart, ItemOrder, Orders, Product
 et User.
 Chaque classe métiers contient des attribut du classe correspond à celui
 de BD.
 Il nous a donc fallu rajouter une classe qui contenait seulement les chemins
 des images que nous avons identifiés par l’identifiant de produit et celui
 de l’image.
 Les classes métiers possèdent que les méthodes pour get et set les attributs
 correspondant mais ne touche pas la BD.
\end_layout

\begin_layout Enumerate

\series bold
Création des classes DAO
\series default
 : 
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé4.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
précisions sur le DAO
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
La couche modèle est constituée de la couche métier (en rouge) et de la
 couche données (en vert).
 La couche métier n'a connaissance que des interfaces décrivant les objets
 de la couche données.
 Ainsi, peu importe le système de stockage final utilisé, du point de vue
 du code métier les méthodes à appeler ne changent pas, elles seront toujours
 celles décrites dans l'interface.
 C'est uniquement l'implémentation qui sera spécifique au mode de stockage.
\end_layout

\begin_layout Standard
Dans notre cas, on construire en premier temps la classe DBUtil pour établir
 le connection entre la base de données et les classes DAO.
 Dans chaque classe DAO spécifiée on génère les commandes SQL par retirer
 les propres attributs depuis notre objets Java Bean et les insérer dans
 les commandes SQL prédéfinie.
 
\end_layout

\begin_layout Standard
Par exemple:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé5.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
exemple 1 méthode DAO 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Quand nous avons une nouvelle instance de Product Bean et nous voulons de
 l’enregistre dans notre base de données, Nous utiliserons la méthode add
 dans Product DAO.
 Cette méthode prépare une ligne de commande SQL "insert into Product values(nul
l,?,?,?,?,?,?,?, ?, ?, ?, ?, ?)" et on le remplit avec les attribut de notre
 objet Product.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé6.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
exemple 2 méthode DAO
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Dans le cas où l'information sur un produit spécifique avec son id_product
 vient à manquer, on peut quand même générer une commande select et retirer
 toutes les information nécessaire.
 Et puis on instancier un nouvel objet de Product, introduit ses attributs
 et le retour comme résultat.
\end_layout

\begin_layout Subsubsection
Choix techniques
\end_layout

\begin_layout Itemize

\series bold
DAO
\series default
 :Un objet d'accès aux données (en anglais data access object ou DAO) est
 un patron de conception (c'est-à-dire un modèle pour concevoir une solution)
 utilisé dans les architectures logicielles objet.
\end_layout

\begin_layout Subsection
Développement Arrière-plan(servlets et filtrages)
\end_layout

\begin_layout Standard
Après nous avons eu les parties JavaBeans/BD fonctionnelles, Il faut des
 méthode pour traiter les requêtes du client et pour la génération de pages
 jsp dynamiques en utilisant le protocole http et donc un serveur web.
 Pour notre projet, on a choisi les servlets et les filtrages pour réaliser
 les liaisons avant-plan et arrière-plan.
\end_layout

\begin_layout Standard
Les filtres sont des objets qui peuvent transformer une requête ou modifier
 une réponse.
 Ce sont des préprocesseur de la requête avant qu’elle atteigne une servlet.
 Dans notre projet nous avons développé trois filtres pour traiter les requêtes
 clientèles.
 L’idée générale pour filtrage est d'extraire l’uri dans ServletRequest
 et trouver les noms de méthode dans l’uri.
 Par exemple, dans ForeAuthFilter on a :
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé7.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Filtre ForeAuthFilter
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
La fonctionnalité de cette filtre contient deux parties: 
\end_layout

\begin_layout Enumerate
Il extrait l’uri dans ServletRequest, supprime le contextpath dans l’uri
 et enregistre le nom de méthode dans un String.
 
\end_layout

\begin_layout Enumerate
2)Il vérifie si le nom de méthode est dans la liste des méthode (no need
 for authentification) , si oui on le laisser passage au filtre suivant.
 Sinon on vérifier l’information d’utilisateur dans la ServletRequest et
 déterminer si on rédiger la requête vers page d’authentification directement.
 
\end_layout

\begin_layout Standard
Le chaînage des filtres est dans l’ordre suivant: FiltrageBack -FiltrageAuthenti
fication-FiltrageFront Après le filtrage, chaque méthode dans la requête
 est transformé comme une chaîne de caractère qui redirige vers une servlet
 nommé “xxxServlet” ou une page jsp.
 
\end_layout

\begin_layout Standard
Pour les servlets on a définit deux classes abstraites: BaseBackServlet
 et BaseForeServlet qui vont définir les méthodes de base (ajouter,modifier,supp
rimer, etc)pour les classes de notre modèle Javabeans.
 Chaque classe bean hérite une classe BackServlet pour traiter les requêtes.
 Par exemple:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé8.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
méthode update pour ProductServlet 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
La figure 24 est la méthode “mettre à jour” pour ProductServlet.
 Une fois que la servlet reçoit la requête de mise à jour, on extrait les
 nouveaux paramètres dans la requête, appele le constructeur de ProductBean
 et ensuite le met à jour dans BD via productDAO.
 Après le traitement, la méthode reirige vers la liste de produits pour
 afficher les résultats.
\end_layout

\begin_layout Standard
Choix technique: Servlet : Une servlet est une classe Java qui permet de
 créer dynamiquement des données au sein d'un serveur HTTP.
 Ces données sont le plus généralement présentées au format HTML, mais elles
 peuvent également l'être au format XML ou tout autre format destiné aux
 navigateurs web.
 
\end_layout

\begin_layout Section
Guide utilisateur
\end_layout

\begin_layout Standard
Dans la partie ‘Guide d’utilisateurs’, nous vous présentons comment utiliser
 notre site web de vente comme l’administrateur.
\end_layout

\begin_layout Subsection
Déploiement de l'application web
\end_layout

\begin_layout Standard
Il est nécessaire de lancer le script ~/OpenWallet/Code/web/compile_linux.sh
 afin de compiler l'ensemble du code source.
\end_layout

\begin_layout Subsection
Guide Admin
\end_layout

\begin_layout Standard
Etant l’admin du site, il est responsable de mettre à jour des produits
 et faire la gestion des commandes.
 En haut de toutes les pages d’administration, nous avons mis un navigateur
 pour entrer la page d’administration de catégorie, utilisateurs et commandes.
\end_layout

\begin_layout Standard
http://127.0.0.1:8080/Openwallet/admin
\end_layout

\begin_layout Standard
C’est le lien pour entrer la page d’administration.
 Nous allons être redirigés directement à la page d’administration de catégories.
 Pour ajouter les nouveaux produits, il faut d’abord ajouter sa catégorie.
 En bas de cette page, vous pouvez ajouter des nouvelles catégories.
 Il y a aussi le button pour éditer les catégories existantes.
\end_layout

\begin_layout Standard
Si quelqu’un veut ajouter des produit sous certain catégorie, donc il faut
 cliquer sur le bouton dans la colonne “Category Management”.
 Avec ce bouton, nous pouvons entrer la page d’administration de produits
 sous une catégorie déterminée.
 Donc, dans la page d’administration de produits, l’administrateur pourra
 ajouter les produits avec nombreuses propriétés.
\end_layout

\begin_layout Section
Présentation des résultats
\end_layout

\begin_layout Standard
Dans cette partie, nous vous présenterons l'ensemble des pages réalisé sous
 forme de capture d'écran.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé9.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 1: Page de login du site OpenWallet
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé10.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 2: Page d’accueil du site OpenWallet
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé11.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 3: Page d’inscription au site OpenWallet
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé12.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 4: Page d’un produit du site OpenWallet
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé13.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 5: Page de produit classé par catégorie.
 Ici c’est la catégorie Homme.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé17.png
	scale 25

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 6: Page d’accueil du site OpenWallet, après le login.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé18.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 7: Page d’accueil du site OpenWallet, avec affichage des catégories.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé19.png
	scale 25

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 8: Page de la saisie de l’adresse d’expédition.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé20.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 9: Page montrant le contenu du chariot.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé21.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 10: Page Admin listant les utilisateurs du site OpenWallet.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé22.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 11: Page Admin listant tous les produits du site OpenWallet.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé23.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 12: Page Admin listant tous les commandes du site OpenWallet
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename collé24.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshot 13: Page Admin listant toutes les catégories du site OpenWallet.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Part
Conclusions et perspectives
\end_layout

\begin_layout Standard
Afin de conclure ce projet, nous allons tout d'abord énoncer un bilan de
 nos réalisations et ensuite présenter les perspectives qui nous sont offertes
 au vus de nos travaux.
 
\end_layout

\begin_layout Standard
Au cours de ce projet, nous avons pu réaliser le site de ventes en nous
 basant sur un modèle de template pour le front-end et l'application du
 motif MVC, via l'implémentation de servlets et du pattern DAO (pour la
 communication avec une base de données MySQL) pour le back-end.
\end_layout

\begin_layout Standard
Les fonctionnalités non-réalisées sont les suivantes : 
\end_layout

\begin_layout Enumerate
Changer le nombre d'un produit et supprimer un produit dans la page panier.
 Le code JS étant déja réalisé, il suffirait ensuite de réaliser la servlet
 correspondante pour implémenter cette fonctionnalité.
\end_layout

\begin_layout Enumerate
Création d'une commande : on peut cliquer sur le bouton Pay dans la page
 panier, ça redirige vers la page de shipping address mais on ne peut pas
 récuperer les produit à acheter.
\end_layout

\begin_layout Enumerate
Premium, la fonctionnalité a été jugée peu importante.
 Il y aurait un attribut à ajouter dans la classe correspondante, et créer
 une page jsp mais la contrainte de temps est trop importante.
\end_layout

\begin_layout Enumerate
La fonctionnalité Commentaire n'est pas entièrement opérationnelle, on a
 une place pour afficher les commentaire s'ils existent.
 On ne peut pas avoir un commentaire que si on a fini une commande.
\end_layout

\begin_layout Enumerate
Pour les utilisateurs, afin de simplifier la tâche, l'administrateur est
 considéré comme le seul vendeur, il peut gérer les catégories et les produits
 sur les page dans le répertoire /web/admin.
\end_layout

\end_body
\end_document
